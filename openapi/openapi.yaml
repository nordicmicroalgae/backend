openapi: 3.0.0
info:
  version: 0.0.0
  title: Nordic Microalgae
  description: API for Nordic Microalgae. __Under development__.
servers:
- url: /api/v1/
  description: Development & Testing purposes
tags:
- name: taxa
  description: Lists and taxonomical information
- name: facts
  description: Collections of facts, traits and various description of taxa
- name: media
  description: Information about pictures and operations for contributing media
- name: articles
  description: Generic content such as pages, news, etc
paths:
  /taxa:
    get:
      tags:
      - taxa
      description: Returns a list of taxa
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  taxa:
                    type: array
                    items:
                      $ref: '#/components/schemas/Taxon'
      parameters:
      - $ref: '#/components/parameters/skip'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/rank'
  /taxa/{scientific-name}:
    get:
      tags:
      - taxa
      description: Returns a single taxon
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxon'
        404:
          description: Taxon not found
      parameters:
      - $ref: '#/components/parameters/scientific-name'
  /synonyms:
    get:
      tags:
      - taxa
      description: Returns a list of synonyms
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  synonyms:
                    type: array
                    items:
                      $ref: '#/components/schemas/Synonym'
      parameters:
      - $ref: '#/components/parameters/skip'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/name'
  /synonyms/{scientific-name}:
    get:
      tags:
      - taxa
      description: Returns synonyms for a single taxon
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  synonyms:
                    type: array
                    items:
                      $ref: '#/components/schemas/Synonym'
        404:
          description: Taxon not found
      parameters:
      - $ref: '#/components/parameters/scientific-name'
  /facts/{scientific-name}:
    get:
      tags:
      - facts
      description: Returns facts about a single taxon
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Facts'
        404:
          description: Facts not found
      parameters:
      - $ref: '#/components/parameters/scientific-name'
  /media:
    post:
      tags:
      - media
      description: Upload a media file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        422:
          description: Invalid file upload
  /media/{media-id}:
    get:
      tags:
      - media
      description: Returns a single media item
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        404:
          description: Media item not found
      parameters:
      - $ref: '#/components/parameters/media-id'
    patch:
      tags:
      - media
      description: Update attributes for a media item
      responses:
        204:
          description: Successful operation
        404:
          description: Media item not found
      parameters:
      - $ref: '#/components/parameters/media-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Attribute'
    delete:
      tags:
      - media
      description: Delete a media item
      responses:
        204:
          description: Successful operation
        404:
          description: Media item not found
      parameters:
      - $ref: '#/components/parameters/media-id'
  /articles:
    get:
      tags:
      - articles
      description: Returns a list of articles
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article/properties/id'
      parameters:
      - $ref: '#/components/parameters/article-type'
      - $ref: '#/components/parameters/article-limit'
  /articles/{id}:
    get:
      tags:
      - articles
      description: Returns a single article
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        404:
          description: Article not found
      parameters:
      - $ref: '#/components/parameters/article-id'
components:
  parameters:
    scientific-name:
      name: scientific-name
      in: path
      description: Scientific name for the taxon
      required: true
      schema:
        type: string
        example: Dinophysis arctica
    media-id:
      name: media-id
      in: path
      description: ID for the media item
      required: true
      schema:
        type: string
        example: e2773cc4-b088-4821-81ef-631a8a7c8135
    skip:
      name: skip
      in: query
      description: Number of records to skip for pagination
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
    limit:
      name: limit
      in: query
      description: Maximum number of records to return
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 50
        default: 50
    name:
      name: name
      in: query
      description: Scientific name
      schema:
        type: string
        example: Dinophysis arctica
    rank:
      name: rank
      in: query
      description: Taxonomical rank
      schema:
        type: string
        example: Phylum
        enum:
        - Domain
        - Kingdom
        - Subkingdom
        - Phylum
        - Subphylum
        - Superclass
        - Infraclass
        - Superorder
        - Order
        - Suborder
        - Infraorder
        - Superfamily
        - Family
        - Subfamily
        - Tribe
        - Genus
        - Subgenus
        - Species pair
        - Species
        - Subspecies
        - Variety
        - Form
        - Hybrid
    article-id:
      name: id
      in: path
      description: Identifier for the article
      required: true
      schema:
        type: string
        example: contact-us
    article-type:
      name: type
      in: query
      description: Article type
      schema:
        type: string
        example: page
        enum:
        - news
        - page
        default: page
    article-limit:
      name: limit
      in: query
      description: Maximum number of articles to return
      schema:
        type: int
        example: 10
  schemas:
    Attribute:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    Facts:
      type: object
      properties:
        provider:
          type: string
          example: HELCOM-PEG
        collection:
          type: string
          example: Biovolumes
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
    Media:
      type: object
      properties:
        media_id:
          type: string
          example: e2773cc4-b088-4821-81ef-631a8a7c8135
        file_name:
          type: string
          example: Dinophysis arctica.jpg
        file_type:
          type: string
          example: image/jpeg
        file_size:
          type: integer
          example: 334207
        checksum:
          type: string
          example: 4338b10b1545efd8b3bb6250831aaaf06dafa21f966fccb40edb808c0606582f
        user_name:
          type: string
          example: Bengt Karlson
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
    Taxon:
      type: object
      properties:
        scientific_name:
          type: string
          example: Dinophysis arctica
        parent_name:
          type: string
          example: Dinophysis
        authority:
          type: string
          example: Mereschkowsky, 1879
        rank:
          type: string
          example: Species
        image:
          type: string
          example: e2773cc4-b088-4821-81ef-631a8a7c8135
    Synonym:
      type: object
      properties:
        scientific_name:
          type: string
          example: Dinophysis acuminata
        current_name:
          type: string
          example: Dinophysis skagii
        authority:
          type: string
        additional_info:
          type: object
          properties:
            hint:
              type: string
              example: Valid name
    Article:
      type: object
      properties:
        id:
          type: string
          example: contact-us
        title:
          type: string
          example: Contact us
        content:
          type: string
          example: This is an __example__ of text content for an _article_.
